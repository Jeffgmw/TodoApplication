package com.example.todoapps

import android.os.Bundle
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.lifecycle.ViewModelProvider
import androidx.recyclerview.widget.LinearLayoutManager
import com.example.todoapps.data.db.TodoDatabase
import com.example.todoapps.data.model.Todo
import com.example.todoapps.data.repository.TodoRepository
import com.example.todoapps.ui.TodoAdapter
import com.example.todoapps.ui.TodoViewmodel
import com.example.todoapps.ui.ViewmodelFactory
import com.google.android.material.datepicker.MaterialDatePicker
import com.example.todoapps.databinding.ActivityMainBinding
import java.util.*

class MainActivity : AppCompatActivity(), TodoAdapter.OnDeleteListener {

    private lateinit var binding: ActivityMainBinding
    private var calendar: Calendar? = null
    private lateinit var viewmodel: TodoViewmodel
    private lateinit var adapter: TodoAdapter

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)

        adapter = TodoAdapter(this)
        val database = TodoDatabase.getInstance(this)
        val dao = database.todoDao()
        val repository = TodoRepository(dao)

        viewmodel =
            ViewModelProvider(this, ViewmodelFactory(repository)).get(TodoViewmodel::class.java)

        viewmodel.todos.observe(this) {
            adapter.submitList(it)
        }

        binding.recyclerView.layoutManager = LinearLayoutManager(this)
        binding.recyclerView.adapter = adapter

        binding.pickDateBtn.setOnClickListener {
            val datePicker =
                MaterialDatePicker.Builder.datePicker()
                    .setTitleText("Select deadline")
                    .setSelection(MaterialDatePicker.todayInUtcMilliseconds())
                    .build()
            datePicker.addOnPositiveButtonClickListener {
                calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"))
                calendar?.timeInMillis = it
            }
            datePicker.show(supportFragmentManager, "TAG")
        }

        binding.addBtn.setOnClickListener {
            if (calendar == null) {
                Toast.makeText(this, "Select a Deadline", Toast.LENGTH_SHORT).show()
            } else {
                val todo = Todo(
                    desc = binding.todoET.text.toString(),
                    date = calendar!!,
                    id = 0 // If using autogenerated id from Room, you can omit or modify as needed
                )
                viewmodel.addTodo(todo)
                binding.todoET.text?.clear() // Clear input field after adding todo
                calendar = null // Reset the calendar to force user to pick new date for next todo
            }
        }
    }

    override fun onDelete(todo: Todo) {
        viewmodel.deleteTodo(todo)
    }
}
